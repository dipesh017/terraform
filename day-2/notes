count - replicate identical instances

count = var.enabled ? 1 : 0

Inputs:
cidr = var.vpc_cidr[count.index]

output "name" {
    value = aws_vpc.main.id[0]
}
output "name" {
    value = aws_vpc.main.id[*]
}

------------------------------------------------------------

Data Blocks

When we want to fetch some aws info and want to make that info as a part of terraform

data "aws_vpc" "selected" {
    tags = { Name = "manual-vpc" }
  }
  
resource "aws_subnet" "main" {
    vpc_id     = data.aws_vpc.selected.id #"vpc-00187b5ed09f73ca1"
    cidr_block = "10.200.1.0/24"
  
    tags = {
      Name = "public-subnet-1"
    }
}
output "manual_vpc_id" {
    value = data.aws_vpc.selected.id
}

------------------------------------------------------------

For each

Usage - replicate non identical instances

Works for sets ["value1","value2","value3"] and map { key=value} / { key = { key1 = value1 } }

Set vs list - set cant have duplicate values
l = ["value1","value2","value3","value1"]
toset(l)
["value1","value2","value3"]

Generally we pass input in form of list, so we convert that list into set via toset
---- TOSET ---------
variable "new_user_name" {
    default = ["rami2","dipesh2"]
  }
resource "aws_iam_user" "iamuser" {
    for_each = toset(var.new_user_name)
    name = each.key
    
    tags = {
      Name = each.key
    }
}
output "iamuser" {
    value = [
      for x in aws_iam_user.iamuser : x.id
    ]
}
---- MAP ---------
variable "user_data" {
  default = {
    rami3 = "aue"
    dipesh3 = "india"
  }
}
variable "user_info" {
  default = {
    rami4 = {
      email = "rami@gmail.com"
      phone = "1234"
    }
    dipesh4 = {
      email = "dipesh@gmail.com"
      phone = "6789"
    }
  }
}
resource "aws_iam_user" "iamusermap1" {
  for_each = var.user_data
  name = each.key
  
  tags = {
    Name = each.key
    Country = each.value
  }
}

resource "aws_iam_user" "iamusermap2" {
  for_each = var.user_info
  name = each.key
  
  tags = {
    Name = each.key
    Phone = each.value.phone
    Email = each.value.email
  }
}

output "user_iamusermap1" {
  value = {
    for x,y in aws_iam_user.iamusermap1 : x => y.arn
  }
}

------------EXAMPLE---------------------

resource "aws_security_group" "this" {
  for_each = var.security_groups


output "security_group_ids" ={
  value = {
    for x,y in aws_security_group.this : x => y.id
  }
}